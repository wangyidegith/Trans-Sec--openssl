零 







一 数字签名
（零）所有者签名
0 input
（0）要使用的签名和哈希算法；
（1）私钥；
（2）所有者ID及长度；(OPTIONAL)
（3）要签名的原始信息及长度。

1 process
（0）calc-hash = hash(要签名的原始信息);
（1）sign：使用私钥加密原始信息的哈希值（trans-hash）得到签名。

2 return 签名：
{
    r;
    s;
}



（二）验证方验签
0 input
（0）所有者使用的签名和哈希算法；
（1）签名证书；
（2）所有者ID及长度；（OPTIONAL）
（3）被签名的原始信息及长度；
（4）所有者的数字签名；
（5）验证级别：0（有效期） 1（有效期 + 验签） 2（有效期 + 验签 + 状态）

1 process
（0）calc-hash = hash(被签名的原始信息);
（1）verify
a 使用证明方公钥解密签名，拿到trans-hash；
b cmp(trans-hash, calc-hash)；   // 一致可证明对端真实性、报文完整性、防止对端抵赖，不一致则验签失败，疑被攻击

2 return success | fail







二 消息签名
（零）所有者签名
0 input
（0）要使用的签名和哈希算法；
（1）私钥；
（2）所有者ID及长度；(OPTIONAL)
（3）要签名的原始信息及长度；
（4）是否附加原文；（OPTIONAL）
（5）证书链；（OPTIONAL）
（6）黑名单。（OPTIONAL）

1 process
（0）calc-hash = hash(要签名的原始信息);
（1）sign：使用私钥加密原始信息的哈希值（trans-hash）得到签名。

2 return 被签名的消息 {
    // 对gm而言，要求使用：https://www.doc88.com/p-7009986972284.html的8提供的格式
}



（一）验证者验签
0 input
（0）sign；
（1）原始数据及长度；（OPTIONAL）
（2）所有者ID及长度；（OPTIONAL）

1 process
（0）calc-hash = hash(被签名的原始信息);
（1）verify
a 使用证明方公钥解密签名，拿到trans-hash；
b cmp(trans-hash, calc-hash)；   // 一致可证明对端真实性、报文完整性、防止对端抵赖，不一致则验签失败，疑被攻击

2 return success | fail

